from typing import Iterable, Optional, Union

class UHIDDevice:
    @property
    def name(self) -> Optional[str]: ...
    @name.setter
    def name(self, name: str) -> None: ...

    @property
    def info(self) -> Optional[tuple[int, int, int]]: ...
    @info.setter
    def info(self, info: tuple[int, int, int]) -> None: ...

    @property
    def phys(self) -> Optional[str]: ...
    @phys.setter
    def phys(self, phys: str) -> None: ...

    @property
    def rdesc(self) -> Optional[list[int]]: ...
    @rdesc.setter
    def rdesc(self, rdesc: Union[str, bytes]) -> None: ...

    def call_input_event(self, _data: Union[list[int], bytes]) -> None: ...
    def create_kernel_device(self) -> None: ...
    def destroy(self) -> None: ...
